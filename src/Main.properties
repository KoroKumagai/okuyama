# JobController(必須)
controller=org.batch.DefaultJobController

# 最大Job監視回数(-1指定で無限ループ)(DefaultJobControllerの場合必須)
# 全てのJobに対して実行チェック、実行、終了チェック、エラーチェックをする回数
maxloop=-1

# Job監視時間間隔(ミリ秒)(DefaultJobControllerの場合必須)
# Job監視の間隔時間を設定
looptimewait=5000

# 終了ファイル(DefaultJobControllerの場合必須)
# normalendfileは現在RUNのステータスのJobが終了次第移行のJobは実行しない
# endfileは強制終了ファイルJobの終了を待たないは全てにおいて優先される
normalendfile=C:/work/java/batchFramework(DataModule)/nend
endfile=C:/work/java/batchFramework(DataModule)/end


# 開始ファイル (DefaultJobControllerの場合使用可能)
# startchkfileは指定ファイルがある場合は処理を開始しない。
# 設定しない場合は開始チェックは行わない。
# startchkfileを設定し、本設定をtrueにした場合、startchkfileが削除されるまで処理がループする。
# ファイルの確認はreloop単位で1確認となる。
#つまりreloopをtrueにしておくと、一時的な中断ファイルの役割を持たすことも出来る。
startchkfile=C:/work/java/batchFramework(DataModule)/startng


# 全てのJobが正常終了もしくは、エラーで終了した場合に
# またループをいちから開始するかを指定する。
# 使用されるJobはインスタンスを新規で再作成したJobになる
# ループ処理はpreprocessから、postprocesもしくはerrorprocessまでのループになる
# 本値をtrueにした場合終了ファイルでのみバッチを終了できる。
# reloopの設定がtrueの場合1件でもJobがエラーの場合も終了せずに実行中のJobの終了を待つ
# 終了後、またはじめから処理を開始する
# startchkfileを設定し、本設定をtrueにした場合、startchkfileが削除されるまで処理がループする。
# (DefaultJobControllerの場合使用可能)
# 指定しない場合はfalse
reloop=false


